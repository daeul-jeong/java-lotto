package lotto.domain;

import lotto.view.InputView;

import java.util.*;

public class Lotto {

	public static final int LOTTO_PRICE_PER_SHEET = 1000;

	private static final int LOTTO_NUMBER_MAX_COUNT = 6;

	private static final int TOTAL_LOTTO_NUMBER_MAX = 45;

	private static List<Integer> defaultLottoNumbers = new ArrayList<>();

	public Lotto() {
		for (int i = 0; i < TOTAL_LOTTO_NUMBER_MAX; i++) {
			this.defaultLottoNumbers.add(i + 1);
		}
	}

	public List<List<Integer>> generateAutoLottoNumbers(int lottoCount) {
		List<List<Integer>> autoGeneratedLottos = new ArrayList<>();
		for (int i = 0; i < lottoCount; i++) {
			List<Integer> lottoNumber = generateLotto();
			autoGeneratedLottos.add(lottoNumber);
		}
		return autoGeneratedLottos;
	}

	private List<Integer> generateLotto() {
		Collections.shuffle(defaultLottoNumbers);
		List<Integer> lottoNumber = new ArrayList<>();
		for (int i = 0; i < LOTTO_NUMBER_MAX_COUNT; i++) {
			lottoNumber.add(defaultLottoNumbers.get(i));
		}
		return lottoNumber;
	}

	public int getMatchCount(List<Integer> lastWeekPrizeNumberList, List<Integer> autoGeneratedLotto) {
		int matchCount = 0;
		for (Integer lotto : autoGeneratedLotto) {
			matchCount = countMatchNumber(lastWeekPrizeNumberList, lotto, matchCount);
		}
		return matchCount;
	}

	private int countMatchNumber(List<Integer> lastWeekPrizeNumberList, Integer lotto, int matchCount) {
		if (lastWeekPrizeNumberList.contains(lotto)) {
			matchCount = matchCount + 1;
		}
		return matchCount;
	}

	public List<List<Integer>> generatePurchagedAutoLotto(int purchaseAmount) {
		int lottoTryCount = calculateLottoCount(purchaseAmount);
		InputView.printPurchaseLottoCount(lottoTryCount);
		List<List<Integer>> autoGeneratedLottos = this.generateAutoLottoNumbers(lottoTryCount);
		InputView.printLottoNumber(autoGeneratedLottos);
		return autoGeneratedLottos;
	}

	public int calculateLottoCount(int purchaseAmount) {
		return purchaseAmount / this.LOTTO_PRICE_PER_SHEET;
	}

}
