package lotto.domain;

import lotto.view.InputView;
import lotto.view.ResultView;

import java.util.*;

public class Lotto {

	private static final int LOTTO_PRICE_PER_SHEET = 1000;

	private static final int LOTTO_NUMBER_MAX_COUNT = 6;

	private static final int TOTAL_LOTTO_NUMBER_MAX = 45;

	InputView inputView = new InputView();

	ResultView resultView = new ResultView();

	private int purchaseAmount;

	private int lottoTryCount;

	private List<Integer> defaultLottoNumbers = new ArrayList<>();

	private List<Integer> lastWeekPrizeNumbers = new ArrayList<>();

	private List<List<Integer>> autoGeneratedLottos = new ArrayList<>();

	public Lotto() {
		for (int i = 0; i < TOTAL_LOTTO_NUMBER_MAX; i++) {
			this.defaultLottoNumbers.add(i + 1);
		}
	}

	public void start() {
		this.purchaseAmount = inputView.printInputNoticeForPurchaseAmount();
		this.lottoTryCount = calculateLottoCount(this.purchaseAmount, LOTTO_PRICE_PER_SHEET);
		inputView.printPurchaseLottoCount(lottoTryCount);
		autoGeneratedLottos = generateAutoLottoNumbers(lottoTryCount);
		inputView.printLottoNumberUI(autoGeneratedLottos);

		String lastWeekPrizeNumber = inputView.printLastPrizeInput();
		lastWeekPrizeNumbers = inputView.convertStringToInteger(lastWeekPrizeNumber);

		List<Integer> lottoResultList = new ArrayList<>();
		LottoResult lottoResult = new LottoResult();
		for (List<Integer> autoGeneratedLotto : autoGeneratedLottos) {
			int matchCount = getMatchCount(lastWeekPrizeNumbers, autoGeneratedLotto);
			lottoResultList.add(matchCount);
		}
		lottoResult.arrangePrize(lottoResultList, LOTTO_PRICE_PER_SHEET);
		resultView.printResultUI(lottoResult);
	}

	public int calculateLottoCount(int purchaseAmount, int lottoPricePerSheet) {
		return purchaseAmount / lottoPricePerSheet;
	}

	public List<List<Integer>> generateAutoLottoNumbers(int lottoCount) {
		for (int i = 0; i < lottoCount; i++) {
			List<Integer> lottoNumber = generateLotto();
			autoGeneratedLottos.add(lottoNumber);
		}
		return autoGeneratedLottos;
	}

	private List<Integer> generateLotto() {
		Collections.shuffle(defaultLottoNumbers);
		List<Integer> lottoNumber = new ArrayList<>();
		for (int i = 0; i < LOTTO_NUMBER_MAX_COUNT; i++) {
			lottoNumber.add(defaultLottoNumbers.get(i));
		}
		return lottoNumber;
	}



	public int getMatchCount(List<Integer> lastWeekPrizeNumberList, List<Integer> autoGeneratedLotto) {
		int matchCount = 0;
		for (Integer lotto : autoGeneratedLotto) {
			matchCount = countMatchNumber(lastWeekPrizeNumberList, lotto, matchCount);
		}
		return matchCount;
	}

	private int countMatchNumber(List<Integer> lastWeekPrizeNumberList, Integer lotto, int matchCount) {
		if (lastWeekPrizeNumberList.contains(lotto)) {
			matchCount = matchCount + 1;
		}
		return matchCount;
	}


}
